<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/util     
        http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	
	<mvc:annotation-driven/>
	
	<context:component-scan base-package="asu.turinggeeks"/>
	
	<util:properties id="applicationConfig" location="classpath:application.properties"/>
	<context:property-placeholder properties-ref="applicationConfig"/>
	
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<bean id="dataSource"  
  		class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
  		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
  		<!-- <property name="url" value="jdbc:mysql://127.4.144.130:3306/turingeeks" />  
  		<property name="username" value="adminDiDcKEF" />  
  		<property name="password" value="A19ty3J6qwcd" /> -->
  		<property name="url" value="jdbc:mysql://localhost:3306/turinggeeks" />  
  		<property name="username" value="root" />  
  		<property name="password" value="root" />  
 	</bean>
 	
 	<bean id="mailService" class="asu.turinggeeks.service.MailService">
         <property name="mailSender" ref="mailSender"></property>
    </bean>
 	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
    
    	<property name="host" value="smtp.gmail.com" />
    	<property name="port" value="587" />
    	<property name="username" value="meetmetg" />
    	<property name="password" value="MeetMe@2015" />
 
    	<property name="javaMailProperties">
        	<props>
            	<prop key="mail.transport.protocol">smtp</prop>
            	<prop key="mail.smtp.auth">true</prop>
            	<prop key="mail.smtp.starttls.enable">true</prop>
        	</props>
    	</property>
	</bean>
	
	<!-- <bean id="usersConnectionRepository" class="org.springframework.social.connect.jdbc.JdbcUsersConnectionRepository" primary="true" scope="singleton">
		<constructor-arg type="javax.sql.DataSource" ref="dataSource"/>
		<constructor-arg type="org.springframework.social.connect.ConnectionFactoryLocator" ref="connectionFactoryLocator"/>
		<constructor-arg type="org.springframework.security.crypto.encrypt.TextEncryptor" ref="textEncryptor"/>
		<property name="connectionSignUp" ref="simpleConnectionSignUp"/>
	</bean>

	<bean name="connectionRepository" class="org.springframework.social.connect.ConnectionRepository" factory-bean="usersConnectionRepository" factory-method="createConnectionRepository" scope="request" lazy-init="true">
		<constructor-arg value="#{request.userPrincipal.name}"/>
		<aop:scoped-proxy proxy-target-class="false"/>
	</bean>	 

	<bean id="OA2ConnectionClass" class="org.springframework.social.connect.Connection" factory-bean="connectionRepository" factory-method="getPrimaryConnection" scope="request" lazy-init="true">
		<constructor-arg type="java.lang.Class" value="org.springframework.social.facebook.api.Facebook"/>
		<aop:scoped-proxy proxy-target-class="false"/>
	</bean> --> 
	
	<bean id="facebookServiceConfig" class="asu.turinggeeks.configuration.OAuthServiceConfig">
		<constructor-arg value="${app.config.oauth.facebook.apikey}" />
		<constructor-arg value="${app.config.oauth.facebook.apisecret}"/>
		<constructor-arg value="${app.config.oauth.facebook.callback}"/>
		<constructor-arg value="org.scribe.builder.api.FacebookApi"/>
	</bean>
	
	<bean id="facebookServiceProvider" class="asu.turinggeeks.configuration.OAuthServiceProvider">
		<constructor-arg name="config" ref="facebookServiceConfig" />
	</bean>
	
	<bean id="twitterServiceConfig" class="asu.turinggeeks.configuration.OAuthServiceConfig">
		<constructor-arg value="${app.config.oauth.twitter.apikey}" />
		<constructor-arg value="${app.config.oauth.twitter.apisecret}"/>
		<constructor-arg value="${app.config.oauth.twitter.callback}"/>
		<constructor-arg value="org.scribe.builder.api.TwitterApi"/>
	</bean>
	
	<bean id="twitterServiceProvider" class="asu.turinggeeks.configuration.OAuthServiceProvider">
		<constructor-arg name="config" ref="twitterServiceConfig" />
	</bean>
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
	p:prefix="/WEB-INF/views/" p:suffix=".jsp"/>

</beans>
